{"version":3,"sources":["App.tsx","index.tsx"],"names":["data","name","value","fill","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","_jsx","children","Sector","CustomTooltip","_ref","active","label","length","_jsxs","className","Chart","totalValue","reduce","acc","entry","angles","map","PieChart","width","height","Pie","activeShape","dataKey","x","y","textAnchor","fontSize","Legend","index","type","id","color","layout","verticalAlign","align","Tooltip","content","container","document","getElementById","createRoot","render","React","StrictMode","App","console","error"],"mappings":"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","file":"static/js/main.efdf39f5.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Sector,\n  ResponsiveContainer,\n  Legend,\n  Tooltip,\n} from \"recharts\";\n\ninterface DataEntry {\n  name: string;\n  value: number;\n  fill: string;\n}\n\nconst data: DataEntry[] = [\n  { name: \"Vehículos\", value: 143, fill: \"#03055B\" },\n  { name: \"Biodiesel\", value: 49, fill: \"#4682B4\" },\n  { name: \"Papel\", value: 40, fill: \"#ADD8E6\" },\n];\n\nconst renderActiveShape = (props: any) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n      <g>\n        <Sector\n            cx={cx}\n            cy={cy}\n            innerRadius={innerRadius}\n            outerRadius={outerRadius}\n            startAngle={startAngle}\n            endAngle={endAngle}\n            fill={fill}\n        />\n      </g>\n  );\n};\n\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    return (\n        <div className=\"bg-white border p-2\">{payload[0].value} US$ Millones</div>\n    );\n  }\n  return null;\n};\n\nconst Chart = () => {\n  const maxAngle = 360;\n  const totalValue = data.reduce((acc, entry) => acc + entry.value, 0);\n  const angles = data.map((entry) => (entry.value / totalValue) * maxAngle);\n\n  return (\n      <div className=\"flex flex-col items-center justify-center h-screen\">\n\n          <PieChart width={400} height={400}>\n            <Pie\n                activeShape={renderActiveShape}\n                data={[data[0]]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90}\n                endAngle={-90 + angles[0]}\n                innerRadius={120}\n                outerRadius={150}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n            />\n            <Pie\n                data={[{ value: data[0].value }]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90 + angles[0]}\n                endAngle={270}\n                innerRadius={120}\n                outerRadius={150}\n                fill=\"#ccc\"\n                dataKey=\"value\"\n            />\n            <Pie\n                activeShape={renderActiveShape}\n                data={[data[1]]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90}\n                endAngle={-90 + angles[1]}\n                innerRadius={80}\n                outerRadius={110}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n            />\n            <Pie\n                data={[{ value: data[1].value }]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90 + angles[1]}\n                endAngle={270}\n                innerRadius={80}\n                outerRadius={110}\n                fill=\"#ccc\"\n                dataKey=\"value\"\n            />\n            <Pie\n                activeShape={renderActiveShape}\n                data={[data[2]]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90}\n                endAngle={-90 + angles[2]}\n                innerRadius={40}\n                outerRadius={70}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n            />\n            <Pie\n                data={[{ value: data[2].value }]}\n                cx=\"50%\"\n                cy=\"50%\"\n                startAngle={-90 + angles[2]}\n                endAngle={270}\n                innerRadius={40}\n                outerRadius={70}\n                fill=\"#ccc\"\n                dataKey=\"value\"\n            />\n            <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" fill=\"#333\" fontSize={24}>\n              Perú\n            </text>\n            <Legend\n                payload={data.map((entry, index) => ({\n                  value: entry.name,\n                  type: \"square\",\n                  id: entry.name,\n                  color: entry.fill,\n                }))}\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"center\"\n            />\n            <Tooltip content={<CustomTooltip />} />\n          </PieChart>\n\n      </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst container = document.getElementById(\"chart-container\");\n\nif (container) {\n    const root = createRoot(container);\n    root.render(\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    );\n} else {\n    console.error(\"El contenedor con id 'chart-container' no se encontró en el DOM.\");\n}\n"],"sourceRoot":""}